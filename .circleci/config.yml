# Audius Protocol - CircleCI Config
# - Installs dependencies and executes unit tests for all sub directories
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.1.0
  helm: circleci/helm@0.1.2
  kubernetes: circleci/kubernetes@0.3.0
  coveralls: coveralls/coveralls@1.0.6
jobs:
  test-mad-dog-e2e:
    # https://circleci.com/docs/2.0/configuration-reference/#resourceclass
    # uses medium (2vcpu/4gb) by default
    resource_class: large # 4vcpu/8gb
    machine:
      image: ubuntu-1604:201903-01 # recommended linux image - includes Ubuntu 16.04, docker 18.09.3, docker-compose 1.23.1
    steps:
      - add_ssh_keys
      - checkout
      - run:
          name: clone tooling and mad dog
          command: |
            cd ../
            mkdir -p ~/.ssh && touch ~/.ssh/config && echo $'Host github.com\n\tStrictHostKeyChecking no' > ~/.ssh/config

      # Download and cache dependencies

      # libs
      - restore_cache:
          name: Restore libs cache
          keys:
            - v1-libs-{{ checksum "libs/package-lock.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-libs-
      - run: rm -rf /home/circleci/project/libs/node_modules/websocket/.git
      - run:
          name: libs repo init
          command: |
            cd libs
            npm install
      - save_cache:
          name: Save libs cache
          key: v1-libs-{{ checksum "libs/package-lock.json" }}
          paths:
            - libs/node_modules

      # data contracts
      - restore_cache:
          name: Restore contracts cache
          keys:
            - v1-data-contracts-{{ checksum "contracts/package-lock.json" }}
            - v1-data-contracts-
      - run:
          name: contract repo init
          command: |
            cd contracts/
            rm -rf node_modules/web3-providers-ws/node_modules/websocket/.git/
            source ~/.bash_profile
            nvm install 10.16
            npm install
      - save_cache:
          name: Save contracts cache
          paths:
            - contracts/node_modules
          key: v1-data-contracts-{{ checksum "contracts/package-lock.json" }}

      # eth contracts
      - restore_cache:
          name: Restore eth-contracts cache
          keys:
            - v1-eth-contracts-{{ checksum "eth-contracts/package-lock.json" }}
            - v1-eth-contracts-
      - run:
          name: eth-contracts repo init
          command: |
            cd eth-contracts/
            rm -rf node_modules/web3-providers-ws/node_modules/websocket/.git/
            source ~/.bash_profile
            nvm install 10.16
            npm install
      - save_cache:
          name: Save eth-contracts cache
          paths:
            - eth-contracts/node_modules
          key: v1-eth-contracts-{{ checksum "eth-contracts/package-lock.json" }}

      # content node
      - restore_cache:
          name: Restore content-node cache
          keys:
            - v1-content-node-{{ checksum "creator-node/package-lock.json" }}
            - v1-content-node-
      - run:
          name: content-node repo init
          command: |
            source ~/.bash_profile
            nvm install v10.16
            cd creator-node/
            npm install
      - save_cache:
          name: Save content-node cache
          paths:
            - creator-node/node_modules
          key: v1-content-node-{{ checksum "creator-node/package-lock.json" }}

      # identity
      - restore_cache:
          name: Restore identity-service cache
          keys:
            - v1-identity-service-{{ checksum "identity-service/package-lock.json" }}
            - v1-identity-service-
      - run:
          name: identity-service repo init
          command: |
            cd identity-service/
            npm install
      - save_cache:
          name: Save identity-service cache
          paths:
            - identity-service/node_modules
          key: v1-identity-service-{{ checksum "identity-service/package-lock.json" }}

      # mad-dog
      - restore_cache:
          name: Restore mad-dog cache
          keys:
            - v1-mad-dog-{{ checksum "mad-dog/package-lock.json" }}
            - v1-mad-dog-
      - run:
          name: mad-dog repo init
          command: |
            cd mad-dog/
            npm install
      - save_cache:
          name: Save mad-dog cache
          paths:
            - mad-dog/node_modules
          key: v1-mad-dog-{{ checksum "mad-dog/package-lock.json" }}

      # service commands
      - restore_cache:
          name: Restore service-commands cache
          keys:
            - v1-service-commands-{{ checksum "service-commands/package-lock.json" }}
            - v1-service-commands-
      - run:
          name: service-commands repo init
          command: |
            source ~/.bash_profile
            nvm install v10.16
            cd service-commands/
            npm install
      - save_cache:
          name: Save service-commands cache
          paths:
            - service-commands/node_modules
          key: v1-service-commands-{{ checksum "service-commands/package-lock.json" }}

      - run:
          name: execute
          command: |
            set -e
            export PROTOCOL_DIR=/home/circleci/project
            source ~/.bash_profile
            nvm install v10.16
            nvm use 10.16
            cd /home/circleci/project/service-commands/scripts/
            cd /home/circleci/project/libs/
            npm link
            cd /home/circleci/project/service-commands/
            npm link
            npm link @audius/libs
            cd /home/circleci/project/mad-dog/
            npm link @audius/libs
            npm link @audius/service-commands
            cd /home/circleci/project/service-commands/scripts/
            sudo "$(which node)" hosts.js add
            sudo curl -L "https://github.com/docker/compose/releases/download/1.24.1/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
            "$(which node)" setup.js up -nc 4
            cd /home/circleci/project/service-commands/scripts/
            "$(which node)" setup.js run user-replica-set-manager up
            cd /home/circleci/project/mad-dog/
            docker ps
            export ipfsHost="localhost"
            export ipfsPort=6001
            npm run start test-ci verbose

  test-libs:
    docker:
      # specify the version you desire here
      - image: circleci/node:14.16
      - image: trufflesuite/ganache-cli:latest
        # https://discuss.circleci.com/t/docker-using-local-image/11581/9
        # https://circleci.com/docs/2.0/configuration-reference/#docker
        command: ['-l', '8000000', '-a', '50']
      - image: trufflesuite/ganache-cli:latest
        # https://discuss.circleci.com/t/docker-using-local-image/11581/9
        # https://circleci.com/docs/2.0/configuration-reference/#docker
        command: ['-l', '8000000', '-p', '8546', '-a', '50']

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh libs || (echo "no diff" && circleci-agent step halt)
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "libs/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run: rm -rf /home/circleci/project/libs/node_modules/websocket/.git
      - run: |
          cd libs
          npm install
      - save_cache:
          paths:
            - libs/node_modules
          key: v1-dependencies-{{ checksum "libs/package.json" }}

      - restore_cache:
          keys:
            - data-contracts-{{ checksum "contracts/package.json" }}
            - data-contracts-
      - run:
          name: contract repo init
          command: |
            cd contracts/
            npm install
      - save_cache:
          paths:
            - contracts/node_modules
          key: data-contracts-{{ checksum "contracts/package.json" }}

      - restore_cache:
          keys:
            - eth-contracts-{{ checksum "eth-contracts/package.json" }}
            - eth-contracts-
      - run:
          name: eth-contracts repo init
          command: |
            cd eth-contracts/
            rm -rf node_modules/web3-providers-ws/node_modules/websocket/.git/
            npm install
      - save_cache:
          paths:
            - eth-contracts/node_modules
          key: eth-contracts-{{ checksum "eth-contracts/package.json" }}

      # run tests!
      - run:
          name: run tests
          command: |
            cd libs
            npm run test-circle-ci

  test-contracts:
    docker:
      - image: circleci/node:14.16
      - image: trufflesuite/ganache-cli:latest
        command: ['--port=8555', '-a', '100', '-l', '8000000']
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh contracts || (echo "no diff" && circleci-agent step halt)
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "contracts/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: installation
          command: |
            cd contracts
            npm install
            cd ../
      - save_cache:
          paths:
            - contracts/node_modules
          key: v1-dependencies-{{ checksum "contracts/package.json" }}

      # run tests!
      - run:
          name: run_tests
          command: |
            cd contracts
            npm run test-circle-ci
            cd ../

  test-eth-contracts:
    docker:
      - image: circleci/node:14.16
      - image: trufflesuite/ganache-cli:latest
        command: ['--port=8546', '-a', '50', '-l', '8000000']
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh eth-contracts || (echo "no diff" && circleci-agent step halt)
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "eth-contracts/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: installation
          command: |
            cd eth-contracts
            npm install
            cd ../
      - save_cache:
          paths:
            - eth-contracts/node_modules
          key: v1-dependencies-{{ checksum "eth-contracts/package.json" }}
      - run:
          name: run_lint
          command: |
            cd eth-contracts
            npm run lint-circle-ci
            cd ../
      - run:
          name: run_tests
          command: |
            cd eth-contracts
            npm run test-circle-ci
            cd ../
      - coveralls/upload:
          path_to_lcov: ./eth-contracts/coverage/lcov.info

  # Disabled - not included in any workflows below
  # Not removing code in case of potential re-enabling
  test-content-service:
    docker:
      # specify the version you desire here
      - image: circleci/node:14.16
      - image: ipfs/go-ipfs:release
      - image: circleci/postgres:11.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: audius_content_service_test
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh content-service || (echo "no diff" && circleci-agent step halt)
      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - content-service-{{ checksum "content-service/package.json" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - content-service-
      - run:
          name: configure content service
          command: |
            cd content-service/
            npm install
      # - save_cache:
      #     paths:
      #       - content-service/node_modules
      #     key: content-service-{{ checksum "content-service/package.json" }}
      - run:
          name: run tests
          command: |
            cd content-service/
            export POSTGRES_TEST_PORT=5432
            npm run test

  test-creator-node:
    docker:
      # specify the version you desire here
      - image: circleci/node:14.16
      - image: ipfs/go-ipfs:release
      - image: circleci/postgres:11.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: audius_creator_node_test
      - image: redis:5.0.4
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh creator-node || (echo "no diff" && circleci-agent step halt)
      # Download and cache dependencies
      # - restore_cache:
      #     keys:
      #     - v1-dependencies-{{ checksum "creator-node/package.json" }}
      #     # fallback to using the latest cache if no exact match is found
      #     - v1-dependencies-
      - run:
          name: setup
          command: |
            cd creator-node
            npm install
      # - save_cache:
      #     paths:
      #       - creator-node/node_modules
      #     key: v1-dependencies-{{ checksum "creator-node/package.json" }}
      - run:
          name: run creator node tests
          command: |
            export POSTGRES_TEST_PORT=5432
            cd creator-node
            export redisPort=6379
            export spOwnerWallet='yes'
            export isCIBuild=true
            export delegateOwnerWallet=0x1eC723075E67a1a2B6969dC5CfF0C6793cb36D25
            export delegatePrivateKey=0xdb527e4d4a2412a443c17e1666764d3bba43e89e61129a35f9abc337ec170a5d
            export storagePath="test_file_storage"
            export ipfsPort=5001
            npm run test:unit
            npm run test:ci

  test-discovery-provider:
    docker:
      - image: circleci/python:3.7-stretch-node-browsers-legacy
        # Discovery provider dependencies
      - image: circleci/postgres:11.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: audius_discovery
      - image: ipfs/go-ipfs:release
        # Bring up ganache
      - image: redis:3.0-alpine
      - image: trufflesuite/ganache-cli:latest
        command: ['--port=8555', '-a', '100', '-l', '8000000']
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh discovery-provider || (echo "no diff" && circleci-agent step halt)
      - restore_cache:
          keys:
            - disc-prov-1-{{ checksum "discovery-provider/requirements.txt" }}
            - disc-prov-1-
      - run:
          name: python-setup
          command: |
            cd discovery-provider
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - discovery-provider/venv/
          key: disc-prov-1-{{ checksum "discovery-provider/requirements.txt" }}
      - run:
          name: python-lint
          command: |
            cd discovery-provider
            source venv/bin/activate
            sh scripts/lint.sh
      - restore_cache:
          keys:
            - disc-prov-contracts-{{ checksum "contracts/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - disc-prov-contracts-
      - run:
          name: contract repo init
          command: |
            cd contracts
            npm install
      - save_cache:
          paths:
            - contracts/node_modules
          key: disc-prov-contracts-{{ checksum "contracts/package.json" }}
      - run:
          name: discovery provider tests
          command: |
            cd discovery-provider
            export audius_ipfs_port=5001
            export audius_redis_url=redis://localhost:6379/0
            export audius_delegate_owner_wallet=0x1D9c77BcfBfa66D37390BF2335f0140979a6122B
            export audius_delegate_private_key=0x3873ed01bfb13621f9301487cc61326580614a5b99f3c33cf39c6f9da3a19ca
            export audius_web3_port=8555
            ./scripts/circle-ci.sh

  test-identity-service:
    docker:
      # specify the version you desire here
      - image: circleci/node:14.16
      - image: ipfs/go-ipfs:release
      - image: trufflesuite/ganache-cli:latest
        # https://discuss.circleci.com/t/docker-using-local-image/11581/9
        # https://circleci.com/docs/2.0/configuration-reference/#docker
        command: ['-l', '8000000']
      - image: circleci/postgres:11.1
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: audius_identity_service_test
      - image: redis:5.0.4
    parameters:
      force:
        type: boolean
        default: false
    steps:
      - checkout
      - unless:
          condition: << parameters.force >>
          steps:
            - run: ./diff.sh identity-service || (echo "no diff" && circleci-agent step halt)
      # restores data-contracts
      - restore_cache:
          keys:
            - data-contracts-{{ checksum "contracts/package.json" }}
            - data-contracts-
      - run:
          name: contract repo init
          command: |
            cd contracts/
            npm install
      # Download and cache dependencies
      - restore_cache:
          keys:
            - identity-service-dep1-{{ checksum "identity-service/package.json" }}
            # fallback to using the latest cache if no exact match is found
            - identity-service-dep1-
      - run:
          name: setup identity
          command: |
            cd identity-service/
            rm -rf ./node_modules/websocket/.git
            npm install --verbose
      - save_cache:
          paths:
            - identity-service/node_modules
          key: identity-service-dep1-{{ checksum "identity-service/package.json" }}
      - run:
          name: run identity service tests
          command: |
            cd identity-service/
            export POSTGRES_TEST_PORT=5432
            export redisPort=6379
            export isCIBuild=true
            npm run test

  docker-build-and-push:
    docker:
      - image: circleci/buildpack-deps:stretch
    parameters:
      repo:
        type: string
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Get tag or latest
          command: |
            # order of precendence for IMAGE tag is:
            # 1. CIRCLE_TAG if defined,
            # 2. Branch name if 'hotfix' in branch name (branch name passed in via $CIRCLE_BRANCH)
            # 3. 'latest', which is the default
            echo "export IMAGE_TAG=`[ $CIRCLE_TAG ] && echo $(echo $CIRCLE_TAG | cut -d@ -f3) || [[ "$CIRCLE_BRANCH" =~ (hotfix) ]] && echo $CIRCLE_BRANCH || echo "latest" `" | tee -a $BASH_ENV
      - run:
          name: Docker login
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
      - run:
          name: Docker build << parameters.repo >>
          command: |
            cd << parameters.repo >>
            docker build -t audius/<< parameters.repo >>:$IMAGE_TAG -t audius/<< parameters.repo>>:$(git rev-parse HEAD) --build-arg git_sha=$(git rev-parse HEAD) .
      - run:
          name: Docker push << parameters.repo >>
          command: |
            docker push audius/<< parameters.repo >>:$IMAGE_TAG
            docker push audius/<< parameters.repo >>:$(git rev-parse HEAD)

workflows:
  # test master at midnight daily
  test-nightly:
    jobs:
      - test-libs:
          force: true
      - test-contracts:
          force: true
      - test-eth-contracts:
          force: true
      - test-creator-node:
          force: true
      - test-discovery-provider:
          force: true
      - test-identity-service:
          force: true
    triggers:
      - schedule:
          cron: '0 5 * * *'
          filters:
            branches:
              only: /(^master$)/

  # test, build and push all commits
  test-build-and-push:
    jobs:
      - test-libs
      - docker-build-and-push:
          name: build-libs
          repo: libs
          requires:
            - test-libs

      - test-contracts
      - docker-build-and-push:
          name: build-contracts
          repo: contracts
          requires:
            - test-contracts

      - test-eth-contracts
      - docker-build-and-push:
          name: build-eth-contracts
          repo: eth-contracts
          requires:
            - test-eth-contracts

      - test-creator-node
      - docker-build-and-push:
          name: build-creator-node
          repo: creator-node
          requires:
            - test-creator-node

      - test-discovery-provider
      - docker-build-and-push:
          name: build-discovery-provider
          repo: discovery-provider
          requires:
            - test-discovery-provider

      - test-identity-service
      - docker-build-and-push:
          name: build-identity-service
          repo: identity-service
          requires:
            - test-identity-service

      - test-mad-dog-e2e
